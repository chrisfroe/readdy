# Find pthread library
FIND_PACKAGE(Threads REQUIRED)

LIST(APPEND READDY_TEST_SOURCES TestMain.cpp)
LIST(APPEND READDY_TEST_SOURCES TestPlugins.cpp)
LIST(APPEND READDY_TEST_SOURCES TestReactions.cpp)
LIST(APPEND READDY_TEST_SOURCES TestSimulation.cpp)
LIST(APPEND READDY_TEST_SOURCES TestPotentials.cpp)
LIST(APPEND READDY_TEST_SOURCES TestObservables.cpp)
LIST(APPEND READDY_TEST_SOURCES TestKernelContext.cpp)
LIST(APPEND READDY_TEST_SOURCES TestSimulationSchemes.cpp)
IF(INCLUDE_PERFORMANCE_TESTS)
    LIST(APPEND READDY_TEST_SOURCES TestPerformance.cpp)
ENDIF(INCLUDE_PERFORMANCE_TESTS)
ADD_EXECUTABLE(runUnitTests ${READDY_TEST_SOURCES} ${TESTING_INCLUDE_DIR})

TARGET_INCLUDE_DIRECTORIES(
        runUnitTests PUBLIC ${ReaDDy_INCLUDE_DIRS} ${TESTING_INCLUDE_DIR} ${GOOGLEMOCK_INCLUDE} ${GOOGLETEST_INCLUDE}
)

TARGET_COMPILE_DEFINITIONS(runUnitTests PRIVATE READDY_KERNELS_TO_TEST="${READDY_KERNELS_TO_TEST}")

TARGET_LINK_LIBRARIES(runUnitTests ReaDDy gtest gtest_main gmock gmock_main ${CMAKE_THREAD_LIBS_INIT})

IF (READDY_INSTALL_UNIT_TEST_EXECUTABLE)
    INSTALL(TARGETS runUnitTests
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION lib)
ENDIF (READDY_INSTALL_UNIT_TEST_EXECUTABLE)